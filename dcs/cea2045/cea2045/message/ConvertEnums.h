// =====================================================================================
// Copyright (c) 2016, Electric Power Research Institute (EPRI)
// All rights reserved.
//
// libcea2045 ("this software") is licensed under BSD 3-Clause license.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// *  Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// *  Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// *  Neither the name of EPRI nor the names of its contributors may
//    be used to endorse or promote products derived from this software without
//    specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
// OF SUCH DAMAGE.
//
// This EPRI software incorporates work covered by the following copyright and permission
// notices. You may not use these works except in compliance with their respective
// licenses, which are provided below.
//
// These works are provided by the copyright holders and contributors "as is" and any express or
// implied warranties, including, but not limited to, the implied warranties of merchantability
// and fitness for a particular purpose are disclaimed.
//
// This software relies on the following libraries and licenses:
//
// #########################################################################################
// Boost Software License, Version 1.0
// #########################################################################################
//
// * catch++ v1.2.1 (https://github.com/philsquared/Catch)
//
// Boost Software License - Version 1.0 - August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
// #########################################################################################
// MIT Licence
// #########################################################################################
//
// * easylogging++ Copyright (c) 2017 muflihun.com
//   https://github.com/easylogging/easyloggingpp
//   https://easylogging.muflihun.com
//   https://muflihun.com
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
/*
 * ConvertEnums.h
 *
 *  Created on: Aug 24, 2015
 *      Author: dupes
 */

#ifndef CEA2045_CEA2045_PROCESSMESSAGE_CONVERTENUMS_H_
#define CEA2045_CEA2045_PROCESSMESSAGE_CONVERTENUMS_H_

namespace cea2045 {

#define BASIC_MESSAGE 0x0801
#define INTERMEDIATE_MESSAGE 0x0802
#define DATA_LINK_MESSAGE 0x0803

#define SHED 0x01
#define END_SHED 0x02
#define APP_ACK 0x03
#define APP_NAK 0x04
#define POWER_LEVEL 0x06
#define PRESENT_RELATIVE_PRICE 0x07
#define NEXT_RELATIVE_PRICE 0x08
#define TIME_REMAINING_PRICE 0x09
#define CPP 0x0a
#define GRID_EMERGENCY 0x0b
#define GRID_GUIDANCE 0x0c
#define COMM_STATUS 0x0e
#define CUST_OVERRIDE 0x11
#define OPER_STATE_REQ 0x12
#define OPER_STATE_RESP 0x13
#define SLEEP_STATE 0x14
#define WAKE_STATE 0x15
#define SIMPLE_TIME_SYNC 0x16
#define LOADUP 0x17
#define INFO_REQ 0x01
#define SET_UTC_TIME 0x02
#define GET_UTC_TIME 0x02
#define MSG_TYPE_SUP 0xFE
#define ECHONET_LT 0x08
#define AUTO_CYCLE 0x04
#define AC_START 0x00
#define AC_STOP 0x01
#define GET_SET 0x03
#define ENERGY_PRICE 0x00
#define TIER 0x01
#define TEMP_OFFSET 0x02
#define TEMP_SETPOINT 0x03
#define PRESENT_TEMPERATURE 0x04

#define COMMODITY_READ 0x06
#define COMMODITY_CODE_ELECTRICITY_CONSUMED 0x00
#define COMMODITY_CODE_ELECTRICITY_PRODUCED 0x01
#define COMMODITY_CODE_NATURAL_GAS_ENGLISH 0x02
#define COMMODITY_CODE_WATER_ENGLISH 0x03
#define COMMODITY_CODE_NATURAL_GAS_METRIC 0x04
#define COMMODITY_CODE_WATER_METRIC 0x05
#define COMMODITY_CODE_TOTAL_ENERGY_STORAGE 0x06
#define COMMODITY_CODE_PRESENT_ENERGY_STORAGE 0x07

#define MAXPAYLOAD_REQ_OP_CODE1 0x18
#define CLEAR_OP_CODE2 0x00
#define MAXPAYLOAD_RESP 0x19

#define DATALINK_MSG_TYP1 0x08
#define DATALINK_MSG_TYP2 0x03

#define INTERMEDIATE_MSG_TYP1 0x08
#define INTERMEDIATE_MSG_TYP2 0x02

#define BASIC_MSG_TYP1 0x08
#define BASIC_MSG_TYP2 0x01

#define LINK_LAYER_ACK_MSG_TYP1 0x06
#define LINK_LAYER_ACK_MSG_TYP2 0x00

#define LINK_LAYER_NAK_MSG_TYP1 0x15

#define DEVICE_INFO_RESPONSE_OP_CODE1 0x01
#define DEVICE_INFO_RESPONSE_OP_CODE2 0x81

#define OP_CODE2_REPLY_RESPONSE 0x81
#define OP_CODE2_REPLY 0x80

enum class MaxPayloadLengthCode
{
	LENGTH2,
	LENGTH4,
	LENGTH8,
	LENGTH16,
	LENGTH32,
	LENGTH64,
	LENGTH128,
	LENGTH256,
	LENGTH512,
	LENGTH1024,
	LENGTH1280,
	LENGTH1500,
	LENGTH2048,
	LENGTH4096,
	INVALID

};

enum class MessageTypeCode
{
	NONE,
	BASIC,
	INTERMEDIATE,
	DATALINK
};

enum class MessageCode
{
	NONE,
	MAX_PAYLOAD_REQUEST,
	MAX_PAYLOAD_RESPONSE,
	SUPPORT_DATALINK_MESSAGES,
	SUPPORT_INTERMEDIATE_MESSAGES,

	BASIC_CRITICAL_PEAK_EVENT_REQUEST,
	BASIC_END_SHED_REQUEST,
	BASIC_SHED_REQUEST,
	BASIC_GRID_EMERGENCY_REQUEST,
	BASIC_LOAD_UP_REQUEST,
	BASIC_OUTSIDE_COMM_CONNECTION_STATUS_MESSAGE,
	BASIC_PRESENT_RELATIVE_PRICE_REQUEST,
	BASIC_NEXT_RELATIVE_PRICE_REQUEST,
	BASIC_QUERY_OPERATIONAL_STATE_REQUEST,
	BASIC_POWER_LEVEL,

	DEVICE_INFORMATION_REQUEST,
	GET_COMMODITY_REQUEST,
	GET_TEMPERATURE_OFFSET,
	GET_SETPOINTS_REQUEST,
	GET_PRESENT_TEMPERATURE_REQUEST,
	SET_TEMPERATURE_OFFSET_REQUEST,
	SET_SETPOINTS_REQUEST,
	SET_ENERGY_PRICE_REQUEST,
	START_CYCLING_REQUEST,
	TERMINATE_CYCLING_REQUEST,

	CUSTOMER_OVERRIDE_RESPONSE
};

enum class LinkLayerNakCode
{
	NO_REASON,
	INVALID_BYTE,
	INVALID_LENGTH,
	CHECKSUM_ERROR,
	RESERVED,
	MESSAGE_TIMEOUT,
	UNSUPPORTED_MESSAGE_TYPE,
	REQUEST_NOT_SUPPORTED,
	NONE
};

enum class DataLinkTypeCode
{
	INVALID,
	MAX_PAYLOAD_REQUEST = 0x18,
	MAX_PAYLOAD_RESPONSE = 0x19,

	SEND_NEXT_COMMAND_TO_SLOT = 0x1e
};

enum class IntermediateTypeCode
{
	INVALID,
	INFO_REQUEST = 0x0101,
	INFO_RESPONSE = 0x0181,
	GET_UTC_TIME_REQUEST = 0x0200,
	COMMODITY_REQUEST = 0x0600,
	COMMODITY_RESPONSE = 0x0680,
	SET_ENERGY_PRICE_RESPONSE = 0x0380,
	GET_SET_TEMPERATURE_OFFSET_REQUEST = 0x0302,
	GET_SET_TEMPERATURE_OFFSET_RESPONSE = 0x0382,
	GET_SET_SETPOINT_RESPONSE = 0x0383,
	GET_PRESENT_TEMPERATURE_RESPONSE = 0X0384,
	START_CYCLING_RESPONSE = 0x0480,
	TERMINATE_CYCLING_RESPONSE = 0x0481
};

enum class OutsideCommuncatonStatusCode
{
	No,
	Found,
	Poor
};

enum class TemperatureUnits
{
	F,
	C
};

enum class DeviceTypes
{
	UNSPECIFIED_TYPE = 0x0000,
	WATER_HEATER_GAS = 0x0001,
	WATER_HEATER_ELECTRIC = 0x0002,
	WATER_HEATER_HEAT_PUMP = 0x0003,
	CENTRAL_AC_HEAT_PUMP = 0x0004,
	CENTRAL_AC_FOSSIL_FUEL_HEAT = 0x0005,
	CENTRAL_AC_RESISTANCE_HEAT = 0x0006,
	CENTRAL_AC_ONLY = 0x0007,
	EVAPORATIVE_COOLER = 0x0008,
	BASEBOARD_ELECTRIC_HEAT = 0x0009,
	WINDOW_AC = 0x000A,
	PORTABLE_ELECTRIC_HEATER = 0x000B,
	CLOTHES_WASHER = 0x000C,
	CLOTHES_DRYER_GAS = 0x000D,
	CLOTHES_DRYER_ELECTRIC = 0x000E,
	REFRIGERATOR_FREEZER = 0x000F,
	FREEZER = 0x0010,
	DISHWASHER = 0x0011,
	MICROWAVE_OVEN = 0x0012,
	OVEN_ELECTRIC = 0x0013,
	OVEN_GAS = 0x0014,
	COOK_TOP_ELECTRIC = 0x0015,
	COOK_TOP_GAS = 0x0016,
	STOVE_ELECTRIC = 0x0017,
	STOVE_GAS = 0x0018,
	DEHUMIDIFIER = 0x0019,
	FAN = 0x0020,
	POOL_PUMP_SINGLE_SPEED = 0x0030,
	POOL_PUMP_VARIABLE_SPEED = 0x0031,
	ELECTRIC_HOT_TUB = 0x0032,
	IRRIGATION_PUMP = 0x0040,
	ELECTRIC_VEHICLE = 0x1000,
	HYBRID_VEHICLE = 0x1001,
	ELECTRIC_VEHICLE_SUPPLY_EQUIPMENT_GENERAL = 0x1100,
	ELECTRIC_VEHICLE_SUPPLY_EQUIPMENT_LEVEL_1 = 0x1101,
	ELECTRIC_VEHICLE_SUPPLY_EQUIPMENT_LEVEL_2 = 0x1102,
	ELECTRIC_VEHICLE_SUPPLY_EQUIPMENT_LEVEL_3 = 0x1103,
	IN_PREMISES_DISPLAY = 0x2000,
	ENERGY_MANAGER = 0x5000,
	GATEWAY_DEVICE = 0x6000,
	WIRELESS = 0x4000,
	PLC = 0x4001,
	WIRED = 0x4002,
	IEEE_802_15_4 = 0x4003,
	IEEE_802_11 = 0x4004,
	IEEE_802_16 = 0x4005,
	VHF_UHF_PAGER = 0x4006,
	FM = 0x4007,
	WIRED_ETHERNET = 0x4008,
	COAXIAL_NETWORKING = 0x4009,
	TELEPHONE_LINE = 0x400A,
	IEEE_1901 = 0x400B,
	IEEE_1901_2 = 0x400C,
	ITUT_G_HN = 0x400D,
	ITUT_G_HNEM = 0x400E,
	CELLULAR = 0x400F,
	UTILITY_AMI_WIRELESS = 0x4010,
	UTILITY_AMI_PLC = 0x4011
};

enum class CurrencyCode
{
	US_DOLLAR = 840,
	EURO = 978,
	MEXICAN_PESO = 484,
	CANADIAN_DOLLAR = 124
};

class ConvertEnums
{

private:
	ConvertEnums();

public:
	virtual ~ConvertEnums();

	static MessageTypeCode convertMessageType(unsigned short messageType);

	static LinkLayerNakCode convertLinkLayerNak(unsigned char nak);

	static DataLinkTypeCode convertDataLinkType(unsigned char dataLinkType);

	static MaxPayloadLengthCode convertMaxPayloadLength(unsigned char maxPayloadLength);

	static IntermediateTypeCode convertIntermediateType(unsigned short intermediateType);
};

} /* namespace cea2045 */

#endif /* CEA2045_CEA2045_PROCESSMESSAGE_CONVERTENUMS_H_ */
